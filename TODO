OK : render customize tag

OK : FIX bugs on Render::paginate	

OK : SessionDelegate, RestfulDelegate,  RenderDelegate

OK : customize domain
	use controller prefix
	dont forget Test::exec	

OK : add mode : develop mode | product mode | maintenance

	
-----------
# : add default empty delegate file via installer
	change Test parameter


-----------
# : query escape 
	http request
	For MySQL : these are available : ^ , $ , . , [...] , [^...] , p1|p2|p3 , * , + , {n} , {m,n}
	
-----------
# : fix document.php bugs	
# : add 2nd parameter $authRequired  to Filters' document  

-----------
OK : split Consts to conf.inc
	
OK : restful permission 


-------------


OK : Render get HTML code. OR include multiple php file *****
	# : document.

OK : let T to load from ini instead of json
	# : add conf/text/en conf/text/jp folder to installer
	# : add conf/text/en/dummy.ini conf/text/jp/dummy.ini to example/installer
	# : update document about T function, filename.keyname or mykey(=controller.mykey)
		# change lang need restart apache
		
	

-------------
OK : add delegate folder , 

		


------------


-------------
# : add OR query to restful ?

------------

	
	

-----------


------------
OK : oauth2 client

# : Oauth2 server

------------
Optimizing
// Apache 
	//mod_deflate mod_gzip
	//allowoverride =none
// render empty script -> html
// ob output buffering?
// unset big []
// close db connection
// use single ' instead of "
// avoid global
// error_log
//$row['id'] $row[id]
// __set, __get
// preg_match -> strncasecmp, strpbrk, stripos ?
// use strstr/stristr instead of str_replace > preg_replace
	// ctype_alnum, ctype_alpha, ctype_digit 
// check @


-------------
/**Security test
 * CrossSite:
 *		CSRF/XSRF:stole your session to submit attack form => random nonce/token
 *			Session Fixation:
 *			Session Hijacking:
 *				http://www.phppro.jp/school/security/vol3/2
 *				http://phpsec.org/projects/guide/4.html
 * 		Xss: URL attack => sanitizing(escape &, <> of url)	
 * 				http://www.phppro.jp/school/security/vol2/1
 * 		Click Jacking => use liberjs 
 * Injection:
 * 		SQL:1) use statement->excecute, 2) dbx_escape_string()
 * 			
 * 		Cookie : => 1)escape Cookie %, 2)check if header value contains \n
 * 		Directory Traversal => check ../->escape
 * Network exploit:
 *		DoS: Traffic attack
 * vulnerability:
 * 		Buffer Overrun/Overflow:submit very long data => check length
 * 		Off-by-one error/OBOE : Over the range e.g. a=1/0 => check range
 * 		Object-method visibility, global variable
 */
